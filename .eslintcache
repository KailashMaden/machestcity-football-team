[{"D:\\React\\mancity\\src\\Components\\ui\\formFields.js":"1","D:\\React\\mancity\\src\\Components\\admin\\matches\\addEditMatch.js":"2","D:\\React\\mancity\\src\\firebase.js":"3","D:\\React\\mancity\\src\\index.js":"4","D:\\React\\mancity\\src\\Components\\authRoutes\\publicRoutes.js":"5","D:\\React\\mancity\\src\\Components\\admin\\matches\\index.js":"6","D:\\React\\mancity\\src\\Hoc\\AdminLayout.js":"7","D:\\React\\mancity\\src\\Components\\Header_footer\\Footer.js":"8","D:\\React\\mancity\\src\\Components\\admin\\nav\\AdminNav.js":"9","D:\\React\\mancity\\src\\Components\\home\\meetPlayers\\index.js":"10","D:\\React\\mancity\\src\\Components\\home\\promotion\\Animation.js":"11","D:\\React\\mancity\\src\\Components\\home\\matches\\Blocks.js":"12","D:\\React\\mancity\\src\\Components\\home\\featured\\Stripes.js":"13","D:\\React\\mancity\\src\\Components\\authRoutes\\privateRoutes.js":"14","D:\\React\\mancity\\src\\Components\\signin\\index.js":"15","D:\\React\\mancity\\src\\Components\\home\\featured\\index.js":"16","D:\\React\\mancity\\src\\Components\\home\\matches\\index.js":"17","D:\\React\\mancity\\src\\Components\\home\\meetPlayers\\cards.js":"18","D:\\React\\mancity\\src\\Components\\ui\\matches_block.js":"19"},{"size":1553,"mtime":1607089779805,"results":"20","hashOfConfig":"21"},{"size":10449,"mtime":1607151236031,"results":"22","hashOfConfig":"21"},{"size":917,"mtime":1607101088196,"results":"23","hashOfConfig":"21"},{"size":736,"mtime":1607070959951,"results":"24","hashOfConfig":"21"},{"size":511,"mtime":1607073807397,"results":"25","hashOfConfig":"21"},{"size":3030,"mtime":1607086935672,"results":"26","hashOfConfig":"21"},{"size":361,"mtime":1607063649918,"results":"27","hashOfConfig":"21"},{"size":420,"mtime":1606728071894,"results":"28","hashOfConfig":"21"},{"size":1312,"mtime":1607070267831,"results":"29","hashOfConfig":"21"},{"size":2505,"mtime":1606831442740,"results":"30","hashOfConfig":"21"},{"size":609,"mtime":1606883495465,"results":"31","hashOfConfig":"21"},{"size":1093,"mtime":1606826503999,"results":"32","hashOfConfig":"21"},{"size":1634,"mtime":1606741279244,"results":"33","hashOfConfig":"21"},{"size":355,"mtime":1607072075232,"results":"34","hashOfConfig":"21"},{"size":3010,"mtime":1607062024560,"results":"35","hashOfConfig":"21"},{"size":255,"mtime":1606741824186,"results":"36","hashOfConfig":"21"},{"size":596,"mtime":1606806746738,"results":"37","hashOfConfig":"21"},{"size":1518,"mtime":1606832770397,"results":"38","hashOfConfig":"21"},{"size":1223,"mtime":1606826355002,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"183gsps",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\mancity\\src\\Components\\ui\\formFields.js",[],["81","82"],"D:\\React\\mancity\\src\\Components\\admin\\matches\\addEditMatch.js",["83"],"import React, { Component } from 'react';\r\nimport AdminLayout from '../../../Hoc/AdminLayout';\r\n\r\nimport FormField from '../../ui/formFields';\r\nimport { validate } from '../../ui/misc';\r\n\r\nimport { firebaseTeams, firebaseDB, firebaseMatches } from '../../../firebase';\r\nimport { firebaseLooper } from '../../ui/misc';\r\n\r\nclass AddEditMatch extends Component {\r\n  state = {\r\n    matchId: '',\r\n    formType: '',\r\n    formError: false,\r\n    formSuccess: '',\r\n    teams: [],\r\n    formdata: {\r\n      date: {\r\n        element: 'input',\r\n        value: '',\r\n        config: {\r\n          label: 'Event date',\r\n          name: 'date_input',\r\n          type: 'date',\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        validationMessage: '',\r\n        showlabel: true,\r\n      },\r\n      local: {\r\n        element: 'select',\r\n        value: '',\r\n        config: {\r\n          label: 'Select a local team',\r\n          name: 'select_local',\r\n          type: 'select',\r\n          options: [],\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        validationMessage: '',\r\n        showlabel: false,\r\n      },\r\n      resultLocal: {\r\n        element: 'input',\r\n        value: '',\r\n        config: {\r\n          label: 'Result local',\r\n          name: 'result_local_input',\r\n          type: 'text',\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        validationMessage: '',\r\n        showlabel: false,\r\n      },\r\n      away: {\r\n        element: 'select',\r\n        value: '',\r\n        config: {\r\n          label: 'Select a local team',\r\n          name: 'select_local',\r\n          type: 'select',\r\n          options: [],\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        validationMessage: '',\r\n        showlabel: false,\r\n      },\r\n      resultAway: {\r\n        element: 'input',\r\n        value: '',\r\n        config: {\r\n          label: 'Result local',\r\n          name: 'result_local_input',\r\n          type: 'text',\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        validationMessage: '',\r\n        showlabel: false,\r\n      },\r\n      referee: {\r\n        element: 'input',\r\n        value: '',\r\n        config: {\r\n          label: 'Raferee',\r\n          name: 'raferee_input',\r\n          type: 'text',\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        validationMessage: '',\r\n        showlabel: true,\r\n      },\r\n      stadium: {\r\n        element: 'input',\r\n        value: '',\r\n        config: {\r\n          label: 'Stadium',\r\n          name: 'stadium_input',\r\n          type: 'text',\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        validationMessage: '',\r\n        showlabel: true,\r\n      },\r\n      result: {\r\n        element: 'select',\r\n        value: '',\r\n        config: {\r\n          label: 'Team result',\r\n          name: 'select_result',\r\n          type: 'select',\r\n          options: [\r\n            { key: 'W', value: 'W' },\r\n            { key: 'L', value: 'L' },\r\n            { key: 'D', value: 'D' },\r\n            { key: 'n/a', value: 'n/a' },\r\n          ],\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        validationMessage: '',\r\n        showlabel: true,\r\n      },\r\n      final: {\r\n        element: 'select',\r\n        value: '',\r\n        config: {\r\n          label: 'Game played ?',\r\n          name: 'select_played',\r\n          type: 'select',\r\n          options: [\r\n            { key: 'Yes', value: 'Yes' },\r\n            { key: 'No', value: 'No' },\r\n          ],\r\n        },\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        validationMessage: '',\r\n        showlabel: true,\r\n      },\r\n    },\r\n  };\r\n  updateForm(element) {\r\n    const newFormdata = { ...this.state.formdata };\r\n    const newElement = { ...newFormdata[element.id] };\r\n\r\n    newElement.value = element.e.target.value;\r\n\r\n    let validData = validate(newElement);\r\n    newElement.valid = validData[0];\r\n    newElement.validationMessage = validData[1];\r\n\r\n    newFormdata[element.id] = newElement;\r\n\r\n    this.setState({\r\n      formError: false,\r\n      formdata: newFormdata,\r\n    });\r\n  }\r\n\r\n  updateFields(match, teamOptions, teams, type, matchId) {\r\n    const newFormdata = {\r\n      ...this.state.formdata,\r\n    };\r\n    for (let key in newFormdata) {\r\n      if (match) {\r\n        newFormdata[key].value = match[key];\r\n        newFormdata[key].valid = true;\r\n      }\r\n      if (key === 'local' || key === 'away') {\r\n        newFormdata[key].config.options = teamOptions;\r\n      }\r\n    }\r\n    this.setState({\r\n      matchId,\r\n      formType: type,\r\n      formdata: newFormdata,\r\n      teams,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const matchId = this.props.match.params.id;\r\n    const getTeams = (match, type) => {\r\n      firebaseTeams.once('value').then((snapshot) => {\r\n        const teams = firebaseLooper(snapshot);\r\n        const teamOptions = [];\r\n\r\n        snapshot.forEach((childSnapshot) => {\r\n          teamOptions.push({\r\n            key: childSnapshot.val().shortName,\r\n            value: childSnapshot.val().shortName,\r\n          });\r\n        });\r\n        this.updateFields(match, teamOptions, teams, type, matchId);\r\n      });\r\n    };\r\n    if (!matchId) {\r\n      //ADD MATCH\r\n    } else {\r\n      firebaseDB\r\n        .ref(`matches/${matchId}`)\r\n        .once('value')\r\n        .then((snapshot) => {\r\n          const match = snapshot.val();\r\n          getTeams(match, 'Edit Match');\r\n        });\r\n    }\r\n  }\r\n  successForm(message) {\r\n    this.setState({\r\n      formSuccess: message,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        formSuccess: '',\r\n      });\r\n    }, 2000);\r\n  }\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n\r\n    let dataToSubmit = {};\r\n    let formIsValid = true;\r\n\r\n    for (let key in this.state.formdata) {\r\n      dataToSubmit[key] = this.state.formdata[key].value;\r\n      formIsValid = this.state.formdata[key].value && formIsValid;\r\n    }\r\n    this.state.teams.forEach((team) => {\r\n      if (team.shortName === dataToSubmit.local) {\r\n        dataToSubmit['localThmb'] = team.thmb;\r\n      }\r\n      if (team.shortName === dataToSubmit.away) {\r\n        dataToSubmit['awayThmb'] = team.thmb;\r\n      }\r\n    });\r\n\r\n    if (formIsValid) {\r\n      if (this.state.formType === 'Edit Match') {\r\n        firebaseDB\r\n          .ref(`matches/${this.state.matchId}`)\r\n          .update(dataToSubmit)\r\n          .then(() => {\r\n            this.successForm('Updated successfully.');\r\n          })\r\n          .catch((e) => {\r\n            this.setState({ formError: true });\r\n          });\r\n      } else {\r\n        //ADD MATCH\r\n      }\r\n    } else {\r\n      this.setState({\r\n        formError: true,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <AdminLayout>\r\n        <div className=\"editmatch_dialog_wrapper\">\r\n          <h2>{this.state.formType}</h2>\r\n          <div>\r\n            <form onSubmit={(e) => this.submitForm(e)}>\r\n              <FormField\r\n                id={'date'}\r\n                formdata={this.state.formdata.date}\r\n                change={(element) => this.updateForm(element)}\r\n              />\r\n\r\n              <div className=\"select_team_layout\">\r\n                <div className=\"label_inputs\">Local</div>\r\n                <div className=\"wrapper\">\r\n                  <div className=\"left\">\r\n                    <FormField\r\n                      id={'local'}\r\n                      formdata={this.state.formdata.local}\r\n                      change={(element) => this.updateForm(element)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <FormField\r\n                      id={'resultLocal'}\r\n                      formdata={this.state.formdata.resultLocal}\r\n                      change={(element) => this.updateForm(element)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"select_team_layout\">\r\n                <div className=\"label_inputs\">Away</div>\r\n                <div className=\"wrapper\">\r\n                  <div className=\"left\">\r\n                    <FormField\r\n                      id={'away'}\r\n                      formdata={this.state.formdata.away}\r\n                      change={(element) => this.updateForm(element)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <FormField\r\n                      id={'resultAway'}\r\n                      formdata={this.state.formdata.resultAway}\r\n                      change={(element) => this.updateForm(element)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"split_fields\">\r\n                <FormField\r\n                  id={'referee'}\r\n                  formdata={this.state.formdata.referee}\r\n                  change={(element) => this.updateForm(element)}\r\n                />\r\n\r\n                <FormField\r\n                  id={'stadium'}\r\n                  formdata={this.state.formdata.stadium}\r\n                  change={(element) => this.updateForm(element)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"split_fields last\">\r\n                <FormField\r\n                  id={'result'}\r\n                  formdata={this.state.formdata.result}\r\n                  change={(element) => this.updateForm(element)}\r\n                />\r\n\r\n                <FormField\r\n                  id={'final'}\r\n                  formdata={this.state.formdata.final}\r\n                  change={(element) => this.updateForm(element)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"success_label\">{this.state.formSuccess}</div>\r\n              {this.state.formError && (\r\n                <div className=\"error_label\">Something is wrong</div>\r\n              )}\r\n              <div className=\"admin_submit\">\r\n                <button onClick={(e) => this.submitForm(e)}>\r\n                  {this.state.formType}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddEditMatch;\r\n","D:\\React\\mancity\\src\\firebase.js",[],"D:\\React\\mancity\\src\\index.js",[],"D:\\React\\mancity\\src\\Components\\authRoutes\\publicRoutes.js",[],"D:\\React\\mancity\\src\\Components\\admin\\matches\\index.js",["84"],"D:\\React\\mancity\\src\\Hoc\\AdminLayout.js",[],"D:\\React\\mancity\\src\\Components\\Header_footer\\Footer.js",[],"D:\\React\\mancity\\src\\Components\\admin\\nav\\AdminNav.js",[],"D:\\React\\mancity\\src\\Components\\home\\meetPlayers\\index.js",[],"D:\\React\\mancity\\src\\Components\\home\\promotion\\Animation.js",[],"D:\\React\\mancity\\src\\Components\\home\\matches\\Blocks.js",[],["85","86"],"D:\\React\\mancity\\src\\Components\\home\\featured\\Stripes.js",[],"D:\\React\\mancity\\src\\Components\\authRoutes\\privateRoutes.js",[],"D:\\React\\mancity\\src\\Components\\signin\\index.js",[],"D:\\React\\mancity\\src\\Components\\home\\featured\\index.js",[],"D:\\React\\mancity\\src\\Components\\home\\matches\\index.js",[],"D:\\React\\mancity\\src\\Components\\home\\meetPlayers\\cards.js",[],"D:\\React\\mancity\\src\\Components\\ui\\matches_block.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":7,"column":37,"nodeType":"93","messageId":"94","endLine":7,"endColumn":52},{"ruleId":"91","severity":1,"message":"95","line":8,"column":8,"nodeType":"93","messageId":"94","endLine":8,"endColumn":22},{"ruleId":"87","replacedBy":"96"},{"ruleId":"89","replacedBy":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'firebaseMatches' is defined but never used.","Identifier","unusedVar","'TableContainer' is defined but never used.",["98"],["99"],"no-global-assign","no-unsafe-negation"]